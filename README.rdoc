= Requirement

Ruby version. 2.6.9
Ruby on Rails version. 6.1.6
PostgreSQL version. 12.11

== Setting up

The steps for setup are listed below:

1) Clone the repository git clone

 $ git clone https://github.com/sdelafuente2013/CRUD-Photos

2) Install and update the necessary gems
```
bundle install

2) Create the DB
```
rails db:create

3) Apply the migrations
```
rails db:migrate

4) Run the server and it will run on port 3000
```
rails start -p 3000

![](https://cloud.githubusercontent.com/assets/7833470/11500467/212e3c7c-97e2-11e5-9256-ca7e28cf6941.gif)

== Basic usage

| Verb | Path | Action | Used for |
| :--- | :--- | :--- | :--- |
| GET | /photos | index | displaying list of all photos | OK
| GET | /photos/new | new | displaying an HTML form to create a new photo | ok
| POST | /photos | create | creating a new photo in the database |
| GET | /photos/:id | show | displaying a specific photo |
| GET | /photos/:id/edit | edit | displaying an HTML form to edit a specific photo |
| PUT or PATCH | /photos/:id | update | updating a specific photo in the database |
| DELETE | /photos/:id | destroy | deleting a specific photo in the database |


== Basic usage




== Final comment

I adjusted to the required time of the challenger, but I have noticed that this API has many improvement points.

Some of them are:

- Improve and increase the tests through Rspec or another

- Work the future reports generated from ActiveJobs in some way

- Apply some good practices to avoid repeating code

- Comment the code